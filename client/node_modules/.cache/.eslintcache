[{"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/index.js":"1","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/App.js":"2","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Home.js":"3","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Footer.js":"4","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Navbar.js":"5","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/List.js":"6","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/DataTable.js":"7","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/dataTableSource.js":"8","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Single.js":"9","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AnswerTable.js":"10","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assesments.js":"11","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Sidebar.js":"12","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assignment.js":"13","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js":"14","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentDashboard.js":"15","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentSideBar.js":"16","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Question.js":"17","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentHero.js":"18","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentAnnouncement.js":"19","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/signup/Register.js":"20","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/login/Login.js":"21","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/store.js":"22","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js":"23","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/data.js":"24","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/answer/Answer.js":"25","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js":"26","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/apiCall.js":"27","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Kata.js":"28","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Congratulations.js":"29","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Quiz.js":"30","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendInvite.js":"31","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Subjective.js":"32","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/contactSlice.js":"33","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendMail.js":"34","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentLogin.js":"35","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/CombineLogin.js":"36","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/responsive.js":"37","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/CreateQuiz.js":"38","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/userSlice.js":"39","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/requestMethods.js":"40","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/auth.js":"41","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/assessmentSlice.js":"42","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewAssessment.js":"43","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/TmHome.js":"44","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js":"45","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assessments.js":"46","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AssessmentDataTable.js":"47"},{"size":281,"mtime":1666853341702,"results":"48","hashOfConfig":"49"},{"size":2250,"mtime":1666880879092,"results":"50","hashOfConfig":"49"},{"size":2814,"mtime":1666853341702,"results":"51","hashOfConfig":"49"},{"size":398,"mtime":1666853341682,"results":"52","hashOfConfig":"49"},{"size":1309,"mtime":1666853341682,"results":"53","hashOfConfig":"49"},{"size":429,"mtime":1666853341702,"results":"54","hashOfConfig":"49"},{"size":2150,"mtime":1666853341682,"results":"55","hashOfConfig":"49"},{"size":1922,"mtime":1666879413572,"results":"56","hashOfConfig":"49"},{"size":2832,"mtime":1666853341712,"results":"57","hashOfConfig":"49"},{"size":2013,"mtime":1666853341672,"results":"58","hashOfConfig":"49"},{"size":3017,"mtime":1666856849502,"results":"59","hashOfConfig":"49"},{"size":1714,"mtime":1666856849502,"results":"60","hashOfConfig":"49"},{"size":2631,"mtime":1666853341702,"results":"61","hashOfConfig":"49"},{"size":2324,"mtime":1666853341712,"results":"62","hashOfConfig":"49"},{"size":646,"mtime":1666853341712,"results":"63","hashOfConfig":"49"},{"size":3981,"mtime":1666853341692,"results":"64","hashOfConfig":"49"},{"size":2033,"mtime":1666853341682,"results":"65","hashOfConfig":"49"},{"size":1039,"mtime":1666853341692,"results":"66","hashOfConfig":"49"},{"size":1666,"mtime":1666853341692,"results":"67","hashOfConfig":"49"},{"size":2513,"mtime":1666853341722,"results":"68","hashOfConfig":"49"},{"size":1436,"mtime":1666853341722,"results":"69","hashOfConfig":"49"},{"size":387,"mtime":1666853341732,"results":"70","hashOfConfig":"49"},{"size":1705,"mtime":1666853341732,"results":"71","hashOfConfig":"49"},{"size":1837,"mtime":1666853341672,"results":"72","hashOfConfig":"49"},{"size":584,"mtime":1666853341692,"results":"73","hashOfConfig":"49"},{"size":302,"mtime":1666853341672,"results":"74","hashOfConfig":"49"},{"size":1391,"mtime":1666853341722,"results":"75","hashOfConfig":"49"},{"size":1670,"mtime":1666856849502,"results":"76","hashOfConfig":"49"},{"size":883,"mtime":1666770149246,"results":"77","hashOfConfig":"49"},{"size":2928,"mtime":1666856849502,"results":"78","hashOfConfig":"49"},{"size":1349,"mtime":1666770149256,"results":"79","hashOfConfig":"49"},{"size":1691,"mtime":1666856849502,"results":"80","hashOfConfig":"49"},{"size":803,"mtime":1666853341722,"results":"81","hashOfConfig":"49"},{"size":2026,"mtime":1666853341682,"results":"82","hashOfConfig":"49"},{"size":2106,"mtime":1666853341712,"results":"83","hashOfConfig":"49"},{"size":2743,"mtime":1666853341702,"results":"84","hashOfConfig":"49"},{"size":314,"mtime":1666770149246,"results":"85","hashOfConfig":"49"},{"size":6635,"mtime":1666853341682,"results":"86","hashOfConfig":"49"},{"size":602,"mtime":1666853341732,"results":"87","hashOfConfig":"49"},{"size":404,"mtime":1666853341672,"results":"88","hashOfConfig":"49"},{"size":149,"mtime":1666853341672,"results":"89","hashOfConfig":"49"},{"size":913,"mtime":1666853341722,"results":"90","hashOfConfig":"49"},{"size":2219,"mtime":1666856849502,"results":"91","hashOfConfig":"49"},{"size":834,"mtime":1666856849502,"results":"92","hashOfConfig":"49"},{"size":760,"mtime":1666880240522,"results":"93","hashOfConfig":"49"},{"size":528,"mtime":1666880392692,"results":"94","hashOfConfig":"49"},{"size":3763,"mtime":1666881227682,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"19ots2a",{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"161"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/index.js",[],["205","206"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/App.js",["207","208","209"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Home.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Footer.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Navbar.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/List.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/DataTable.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/dataTableSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Single.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AnswerTable.js",["210"],"import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport styled from \"styled-components\";\n\nconst rows = [\n  {\n    id: 1,\n    name: \"What is the sum of ...\",\n    answer: 2100999,\n    correctAnswer: 2100999,\n    answerThree: 59003,\n    answerFour: 290013,\n  },\n  {\n    id: 2,\n    name: \"What is the sum of ...\",\n    answer: 900,\n    correctAnswer: 9099,\n    answerThree: 5003,\n    answerFour: 2013,\n  },\n  {\n    id: 3,\n    name: \"What is the sum of ...\",\n    answer: 5,\n    correctAnswer: 5,\n    answerThree: 59,\n    answerFour: 3,\n  },\n  {\n    id: 4,\n    name: \"What is the sum of ...\",\n    answer: 9,\n    correctAnswer: 2100999,\n    answerThree: 9003,\n    answerFour: 290013,\n  },\n];\n\nconst AnswerTable = () => {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Question Id</TableCell>\n            <TableCell>Questions</TableCell>\n            <TableCell>Selected Answer</TableCell>\n            <TableCell>Correct Answer</TableCell>\n            <TableCell>Answer Three</TableCell>\n            <TableCell>Answer Four</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.answer}</TableCell>\n              <TableCell>{row.correctAnswer}</TableCell>\n              <TableCell>{row.answerThree}</TableCell>\n              <TableCell>{row.answerFour}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default AnswerTable;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assesments.js",["211"],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport assesment from \"../CSS/_assesment.scss\";\nimport { BiBookAdd } from \"react-icons/bi\";\nimport { MdModeEditOutline } from \"react-icons/md\";\nimport { MdDelete } from \"react-icons/md\";\n\nfunction Assesments() {\n  let navigate = useNavigate();\n  return (\n    <div className=\"asses\">\n      <Sidebar />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>Assessment</h1>\n        </div>\n        <div className=\"add\">\n          <div>\n            <BiBookAdd className=\"a-icon\" />{\" \"}\n            <span\n              onClick={() => {\n                navigate(\"/newAssessment\");\n              }}\n            >\n              Create New Assessment\n            </span>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Search Assesment\"\n              name=\"search\"\n              className=\"Search\"\n            />\n          </div>\n        </div>\n        <div className=\"as-container\">\n          <div className=\"Assesment\">\n            <span>Assesment 1</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 2</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 3</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 4</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Assesments;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Sidebar.js",["212"],"import React from \"react\";\nimport sidebar from \"../CSS/_sidebar.scss\";\nimport image from \"../assests/images/logo.png\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@radix-ui/react-avatar\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { FaBook } from \"react-icons/fa\";\nimport { MdGrade } from \"react-icons/md\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  return (\n    <div className=\"side-nav\">\n      <Link to=\"/\">\n        <div className=\"myLogo\">\n          <img src={image} alt=\"wewe\" />\n        </div>\n      </Link>\n\n      <div className=\"prof\">\n        <Avatar>\n          <AvatarImage\n            src=\"https://images.unsplash.com/photo-1492633423870-43d1cd2775eb?&w=128&h=128&dpr=2&q=80\"\n            alt=\"Colm Tuite\"\n            className=\"tESTING\"\n          />\n          <AvatarFallback delayMs={600}>CT</AvatarFallback>\n        </Avatar>\n        <span>username</span>\n      </div>\n      <div className=\"icon-container\">\n        <Link to=\"/mentors\">\n          <div className=\"iCon\">\n            <AiFillHome className=\"iCON\" /> <span>Home</span>\n          </div>\n        </Link>\n        <Link to=\"/mentors/assessments\">\n          <div className=\"iCon\">\n            {\" \"}\n            <FaBook className=\"iCON\" /> <span>Assesments</span>\n          </div>\n        </Link>\n\n        <Link to=\"/mentors/grades\">\n          <div className=\"iCon\">\n            {\" \"}\n            <MdGrade className=\"iCON\" /> <span>Grades</span>\n          </div>\n        </Link>\n      </div>\n      <div className=\"logof\">\n        {\" \"}\n        <BiLogOutCircle className=\"iCON\" /> <span>Logout</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assignment.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentDashboard.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentSideBar.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Question.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentHero.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentAnnouncement.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/signup/Register.js",["213","214"],"import React, { useState } from \"react\";\nimport \"./signup.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Register() {\n  const [inputs, setInputs] = useState({});\n  const [confirmPassword, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(false);\n\n    try {\n      if (inputs.password === confirmPassword) {\n        // const { data } = await axios.post(\"/register\", inputs);\n        inputs && window.location.replace(\"/login\");\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <h1 className=\"header\">Create Account</h1>\n        <p>Fill in the form below</p>\n        <form className=\"registerForm\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"first_name\"\n            placeholder=\"First Name\"\n          />\n\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"last_name\"\n            placeholder=\"Last Name\"\n          />\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"username\"\n            placeholder=\"Username\"\n          />\n\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"email\"\n            placeholder=\"Email\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={handleChange}\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={(event) => setConfirmPass(event.target.value)}\n            name=\"confirm password\"\n            placeholder=\"Confirm Password\"\n          />\n\n          <span>\n            {\" \"}\n            By creating an account, I consent to the processing of my personal\n            data in accordance with the <b>PRIVACY POLICY</b>\n          </span>\n          <button className=\"fluid ui button blue\">CREATE</button>\n          <span className=\"mt-2\">\n            Have an account?{\" \"}\n            <Link to=\"/login\" className=\"log\">\n              Login\n            </Link>\n          </span>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/login/Login.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/store.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/data.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/answer/Answer.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/apiCall.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Kata.js",["215","216"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Kata({page, setPage, setKata}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setKata(allQuestions)\n    };\n\n\n    // console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container' key={index}>\n                        <h4>Challenge {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n       \n    </div>\n  )\n}\n\nexport default Kata","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Congratulations.js",["217"],"import React from 'react'\nimport congrats from '../CSS/_congratulations.scss'\nimport confeti from '../assests/images/confeti.png'\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Congratulations() {\n    let navigate = useNavigate();\n    \n  return (\n    <div className='congrats'>\n        <div>\n            <h1>Congratulations!</h1>\n        </div>\n        <div>\n            <h5>New Assesment has been created</h5>\n        </div>\n        <div>\n            <img src={confeti} alt='Yey'/>\n            {/* <iframe src=\"https://giphy.com/embed/5jT0jaNDsM6Ik7X9yq\" width=\"200\" height=\"200\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/justin-background-confetti-5jT0jaNDsM6Ik7X9yq\"></a></p> */}\n        </div>\n        <button onClick={()=>{navigate(\"/assessments\")}}>CLOSE</button>\n    </div>\n  )\n}\n\nexport default Congratulations",["218","219"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Quiz.js",["220","221"],"import React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\nfunction Quiz({page, setPage, setMcq}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\", optionA: \"\", optionB: \"\",optionC: \"\",optionD: \"\", correctAns:\"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\",\n            optionA: \"\",\n            optionB: \"\",\n            optionC: \"\",\n            optionD: \"\",\n            correctAns: \"\",\n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setMcq(allQuestions)\n    };\n \n\n    // console.log(allQuestions);\n    \n  return (\n    <div  className=\"question\">\n        <div className=\"q-form\">\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className=\"q-container\" key={index}>\n                        <h4>Question {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                        <input type=\"text\" name=\"optionA\" placeholder=\"Enter option A\" value={field.optionA} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionB\" placeholder=\"Enter option B\" value={field.optionB} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionC\" placeholder=\"Enter option C\" value={field.optionC} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionD\" placeholder=\"Enter option D\" value={field.optionD} onChange={(event) =>handleInputChange(index, event) }/>\n                        <select className='opt' onChange={(event) =>handleInputChange(index, event) } value={field.correctAns} name='correctAns'>\n                          \n                            <option value=\"a\">A</option>\n                            <option value=\"b\">B</option>\n                            <option value=\"ab\">AB</option>\n                            <option value=\"o\">O</option>\n                        </select>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n        \n    </div>\n  )\n}\n\nexport default Quiz","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendInvite.js",["222"],"import React, { useState } from 'react'\nimport invite from '../CSS/_sendInvite.scss'\nimport Select from 'react-select';\n\n\nfunction SendInvite({page, setPage, }) {\n  const [selectedlinks , setSelectedlinks] = useState([])\n  \n\n  // dummy student emails\n  const emails = [\n  {value: \"joedoe@email.com\",label: \"joedoe@email.com\",},\n  {value: \"marydoe@email.com\",label: \"marydoe@email.com\",},\n  {value: \"masai@email.com\",label: \"masai@email.com\",},\n  ];\n\n\n\n\n  return (\n    <div className=\"invite\">\n      <div className='heading'>Invite Students</div>\n      <div className='mid'>\n        <label>Select Email</label>\n       <Select  \n                isMulti\n                closeMenuOnSelect={false}\n                className=\"choise \"\n                placeholder=\"Select Students\"\n                options={emails}\n                isClearable={true}\n                noOptionsMessage={() => \"Student not found\"}\n                isSearchable = {true}\n                onChange={(item) => setSelectedlinks(item)}\n                \n                \n              />\n\n      </div>\n      <div className='lower'>\n          <button  onClick={() => {setPage(page - 1)}}>Back</button>\n          <button onClick={() => {\n              console.log(selectedlinks)\n              setPage(page + 1)}}>Finish</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SendInvite","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Subjective.js",["223","224"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Subjective({page, setPage, setPros}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n        \n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setPros(allQuestions)\n    };\n\n\n    // console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container' key={index}>\n                        <h4>Question  {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n       \n    </div>\n  )\n}\n\nexport default Subjective","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/contactSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendMail.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentLogin.js",["225","226","227"],"import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StudentLogin = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Welcome Back</Title>\n        <p>Enter your details below</p>\n        <Form>\n          <Input\n            placeholder=\"Username\"\n            name=\"username\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <Input\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button onClick={handleClick}>LOGIN</Button>\n          <Link>DO NOT REMEMBER PASSWORD?</Link>\n          <Link>CREATE A NEW ACCOUNT</Link>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default StudentLogin;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(rgba(16, 31, 60, 0.5), rgba(16, 31, 60, 0.5)),\n    url(\"https://blog.hackerrank.com/wp-content/uploads/HackerRank_RemoteHiringUpdates.png\")\n      center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 25%;\n  padding: 20px;\n  color: #0a1f4e;\n  background: white;\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  font-weight: 300;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  border: 1px solid #0a1f4e;\n  min-width: 40%;\n  margin: 10px 0;\n  padding: 10px;\n`;\n\nconst Button = styled.button`\n  background: #ea501a;\n  width: 40%;\n  color: white;\n  padding: 15px 20px;\n  cursor: pointer;\n  border: none;\n  margin-bottom: 10px;\n  &:disabled {\n    cursor: not-allowed;\n    color: green;\n  }\n`;\n\nconst Link = styled.a`\n  margin: 5px 0;\n  font-size: 12px;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst Error = styled.span`\n  color: red;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/CombineLogin.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/responsive.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/CreateQuiz.js",["228","229"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\nimport { addAssessment } from \"../redux/apiCall\";\nimport { addQuiz } from \"../redux/assessmentSlice\";\nimport Sidebar from \"./Sidebar\";\n\nconst CreateQuiz = () => {\n  const [assessment, setAssessment] = useState({});\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n\n  const [assessmentInputs, setAssessmentInputs] = useState({\n    title: \"\",\n    duedate: \"\",\n  });\n\n  const [formData, setFormData] = useState({\n    question: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    time: null,\n  });\n\n  const dispatch = useDispatch();\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n\n  const assessmentChange = (event) => {\n    const { name, value } = event.target;\n    setAssessmentInputs({ ...assessmentInputs, [name]: value, mentor: mentor });\n  };\n\n  const onAddAssessment = (event) => {\n    event.preventDefault();\n    try {\n      addAssessment(assessmentInputs, dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n\n    // setAssessment(assessmentInputs);\n  };\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let quizData = {\n      question: formData.question,\n      answers: [formData.answer1, formData.answer2, formData.answer3],\n      correct_answer: correctAnswer,\n      time_limit: formData.time,\n      assessment_id: 4,\n    };\n    try {\n      const { data } = await request.post(\"/quizzes\", quizData);\n\n      dispatch(addQuiz(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Quiz</Title>\n          <TopForm onSubmit={onAddAssessment}>\n            <FormInput>\n              <Label htmlFor=\"assTitle\">Assessment Title</Label>\n              <Input\n                id=\"assTitle\"\n                type=\"text\"\n                name=\"title\"\n                value={assessmentInputs.title}\n                onChange={assessmentChange}\n                placeholder=\"Title\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"duedate\">Due Date</Label>\n              <Input\n                id=\"duedate\"\n                type=\"datetime-local\"\n                name=\"duedate\"\n                value={assessmentInputs.duedate}\n                style={{ cursor: \"pointer\" }}\n                onChange={assessmentChange}\n                placeholder=\"Due Date\"\n              />\n            </FormInput>\n            <Button>Add</Button>\n          </TopForm>\n        </Top>\n        <AssessmentNumber>Assesment No: 1</AssessmentNumber>\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            <FormInput>\n              <Label htmlFor=\"question\">Question</Label>\n              <Input\n                id=\"question\"\n                type=\"text\"\n                name=\"question\"\n                onChange={handleChange}\n                placeholder=\"Question\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer1\">Asnwer 1</Label>\n              <Input\n                id=\"answer1\"\n                type=\"text\"\n                name=\"answer1\"\n                onChange={handleChange}\n                placeholder=\"Answer One\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer2\">Answer 2</Label>\n              <Input\n                id=\"answer2\"\n                type=\"text\"\n                name=\"answer2\"\n                onChange={handleChange}\n                placeholder=\"Answer Two\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer3\">Answer 3</Label>\n              <Input\n                id=\"answer3\"\n                type=\"text\"\n                name=\"answer3\"\n                onChange={handleChange}\n                placeholder=\"Answer Three\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"correct\">Correct Answer</Label>\n              <Input\n                id=\"correct\"\n                type=\"text\"\n                name=\"correct\"\n                onChange={(e) => setCorrectAnswer(e.target.value)}\n                placeholder=\"Correct Answer\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"time\">Time Limit</Label>\n              <Input\n                id=\"time\"\n                type=\"number\"\n                name=\"time\"\n                onChange={handleChange}\n                placeholder=\"Time Limit\"\n              />\n            </FormInput>\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default CreateQuiz;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst TopForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  box-sizing: border-box;\n`;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #1896ff;\n  color: #eff8ff;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst AssessmentNumber = styled.div`\n  color: gray;\n  font-size: 1rem;\n  margin: 1.25rem;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/userSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/requestMethods.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/auth.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/assessmentSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewAssessment.js",["230"],"import React, { useState } from 'react'\nimport Sidebar from './Sidebar'\nimport newAssignment from '../CSS/_newAssignment.scss'\nimport { BiBookAdd } from 'react-icons/bi';\nimport { BsCodeSlash, BsPatchQuestion } from 'react-icons/bs';\nimport { useNavigate } from 'react-router-dom';\nimport Quiz from './Quiz';\nimport Kata from './Kata';\nimport Subjective from './Subjective';\n\nfunction NewAssessment() {\n  \n  let navigate = useNavigate();\n\n  const [formData, setformData] = useState({\n    title:\"\",\n  })\n  \n\n  const [mcq, setMcq] =useState({})\n  const [kata, setKata] =useState({})\n  const [pros, setPros] =useState({})\n\n  //handleChange\n  function handleChange (event){\n    const name = event.target.name;\n    let value = event.target.value;\n    setformData({\n        ...formData,\n        [name]:value\n    })\n  }\n\n  // console.log(formData)\n  // console.log(mcq)\n\n  const merge = {...formData, ...mcq, ...kata, ...pros}\n  console.log(merge)\n  return (\n    <div className=\"asses\">\n      <Sidebar className=\".side-nav\" />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1> New Assesment</h1>\n        </div>\n        <div className=\"Atitle\">\n          <input type=\"text\" placeholder=\"Enter Assessment Title\" value={formData.title} name=\"title\" onChange={handleChange}/>\n        </div>\n        <div className=\"Anav\">\n          <div className='marker'>\n            <BiBookAdd className='a-icon'/> <span>QUIZ</span>\n          </div>\n          <div className='marker'>\n            <BsCodeSlash className='a-icon'/> <span>KATA</span>\n          </div>\n          <div className='marker'>\n            <BsPatchQuestion className='a-icon'/> <span>PROS</span>\n          </div>\n        </div>\n        <div className='neW'>\n          <div className='mcQ'>\n            <Quiz setMcq={setMcq}/>\n          </div>\n          <div className='katA'>\n            <Kata  setKata={setKata}/>\n          </div>\n          <div className='proS'>\n            <Subjective setPros={setPros}/>\n          </div>\n        </div>\n        <div className='nexT'>\n          <button className='buttoN' onClick={()=>{navigate(\"/assessments\")}}>SAVE</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NewAssessment\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/TmHome.js",["231"],"import React from 'react'\nimport Calendar from 'react-calendar';\nimport Sidebar from '../components/Sidebar';\nimport dashboard from '../CSS/_dashboard.scss'\nimport 'react-calendar/dist/Calendar.css';\n\nfunction TmHome() {\n  return (\n    <div className=\"asses\">\n      <Sidebar />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>DASHBOARD</h1>\n        </div>\n        <div className='calender'>\n            <Calendar className='cal'/>\n        </div>\n        <div className='stats'>\n            <div className='stat1'>\n                <h5>STUDENTS NUMBER</h5>\n                <p>Number</p>\n            </div>\n            <div className='stat1'>\n                <h5>ASSESSMENTS CREATED</h5>\n                <p>Number</p>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TmHome","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assessments.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AssessmentDataTable.js",["232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":21},{"ruleId":"237","severity":1,"message":"241","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":16},{"ruleId":"237","severity":1,"message":"242","line":25,"column":9,"nodeType":"239","messageId":"240","endLine":25,"endColumn":13},{"ruleId":"237","severity":1,"message":"243","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":14},{"ruleId":"237","severity":1,"message":"244","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":17},{"ruleId":"237","severity":1,"message":"245","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":15},{"ruleId":"237","severity":1,"message":"246","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"247","line":9,"column":10,"nodeType":"239","messageId":"240","endLine":9,"endColumn":15},{"ruleId":"237","severity":1,"message":"248","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":16},{"ruleId":"237","severity":1,"message":"249","line":22,"column":11,"nodeType":"239","messageId":"240","endLine":22,"endColumn":32},{"ruleId":"237","severity":1,"message":"250","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":16},{"ruleId":"233","replacedBy":"251"},{"ruleId":"235","replacedBy":"252"},{"ruleId":"237","severity":1,"message":"248","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":16},{"ruleId":"237","severity":1,"message":"249","line":24,"column":11,"nodeType":"239","messageId":"240","endLine":24,"endColumn":32},{"ruleId":"237","severity":1,"message":"253","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"237","severity":1,"message":"248","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":16},{"ruleId":"237","severity":1,"message":"249","line":22,"column":11,"nodeType":"239","messageId":"240","endLine":22,"endColumn":32},{"ruleId":"237","severity":1,"message":"254","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":18},{"ruleId":"237","severity":1,"message":"255","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":18},{"ruleId":"237","severity":1,"message":"256","line":99,"column":7,"nodeType":"239","messageId":"240","endLine":99,"endColumn":12},{"ruleId":"237","severity":1,"message":"257","line":10,"column":10,"nodeType":"239","messageId":"240","endLine":10,"endColumn":20},{"ruleId":"237","severity":1,"message":"258","line":10,"column":22,"nodeType":"239","messageId":"240","endLine":10,"endColumn":35},{"ruleId":"237","severity":1,"message":"259","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"260","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":17},{"ruleId":"237","severity":1,"message":"261","line":7,"column":9,"nodeType":"239","messageId":"240","endLine":7,"endColumn":17},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'NewAssessment' is defined but never used.","Identifier","unusedVar","'SendMail' is defined but never used.","'user' is assigned a value but never used.","'styled' is defined but never used.","'assesment' is defined but never used.","'sidebar' is defined but never used.","'axios' is defined but never used.","'error' is assigned a value but never used.","'question' is defined but never used.","'handleRemoveQuestions' is assigned a value but never used.","'congrats' is defined but never used.",["262"],["263"],"'invite' is defined but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'Error' is assigned a value but never used.","'assessment' is assigned a value but never used.","'setAssessment' is assigned a value but never used.","'newAssignment' is defined but never used.","'dashboard' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]