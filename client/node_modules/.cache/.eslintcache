[{"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/index.js":"1","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/store.js":"2","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/App.js":"3","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js":"4","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/contactSlice.js":"5","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/mentorSlice.js":"6","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/studentSlice.js":"7","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/assessmentSlice.js":"8","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewAssessment.js":"9","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/CreateQuiz.js":"10","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/New.js":"11","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Home.js":"12","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/List.js":"13","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assessments.js":"14","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Single.js":"15","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/SingleAssessment.js":"16","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Trial.js":"17","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js":"18","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/CombineLogin.js":"19","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/loginSource.js":"20","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/attemptsSource.js":"21","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/createFormSource.js":"22","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js":"23","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/login/Login.js":"24","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/TmHome.js":"25","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assignment.js":"26","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentDashboard.js":"27","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/signup/Register.js":"28","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/registerSource.js":"29","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js":"30","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/data.js":"31","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/apiCall.js":"32","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/requestMethods.js":"33","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Footer.js":"34","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AssessmentDataTable.js":"35","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AnswerTable.js":"36","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/DataTable.js":"37","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SingleAssessmentSidebar.js":"38","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Sidebar.js":"39","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Question.js":"40","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Navbar.js":"41","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentSideBar.js":"42","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Test.js":"43","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/auth.js":"44","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/dataTableSource.js":"45","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/answer/Answer.js":"46","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Info.js":"47","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentAttempt.js":"48","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentAssignment.js":"49"},{"size":463,"mtime":1667232220189,"results":"50","hashOfConfig":"51"},{"size":1088,"mtime":1667232220189,"results":"52","hashOfConfig":"51"},{"size":4684,"mtime":1667235195959,"results":"53","hashOfConfig":"51"},{"size":1708,"mtime":1667133256924,"results":"54","hashOfConfig":"51"},{"size":872,"mtime":1667133256924,"results":"55","hashOfConfig":"51"},{"size":648,"mtime":1667133256924,"results":"56","hashOfConfig":"51"},{"size":658,"mtime":1667133256924,"results":"57","hashOfConfig":"51"},{"size":1678,"mtime":1667133256914,"results":"58","hashOfConfig":"51"},{"size":4370,"mtime":1667133256914,"results":"59","hashOfConfig":"51"},{"size":5387,"mtime":1667133256914,"results":"60","hashOfConfig":"51"},{"size":3693,"mtime":1667133256914,"results":"61","hashOfConfig":"51"},{"size":2820,"mtime":1667190429287,"results":"62","hashOfConfig":"51"},{"size":429,"mtime":1667133113004,"results":"63","hashOfConfig":"51"},{"size":858,"mtime":1667133256914,"results":"64","hashOfConfig":"51"},{"size":2899,"mtime":1667235440719,"results":"65","hashOfConfig":"51"},{"size":4002,"mtime":1667196785867,"results":"66","hashOfConfig":"51"},{"size":288,"mtime":1667190429287,"results":"67","hashOfConfig":"51"},{"size":2324,"mtime":1667190429287,"results":"68","hashOfConfig":"51"},{"size":2748,"mtime":1667190429277,"results":"69","hashOfConfig":"51"},{"size":426,"mtime":1667133256914,"results":"70","hashOfConfig":"51"},{"size":745,"mtime":1667228613359,"results":"71","hashOfConfig":"51"},{"size":748,"mtime":1667133256914,"results":"72","hashOfConfig":"51"},{"size":750,"mtime":1667133256914,"results":"73","hashOfConfig":"51"},{"size":1625,"mtime":1667233638799,"results":"74","hashOfConfig":"51"},{"size":837,"mtime":1667232220189,"results":"75","hashOfConfig":"51"},{"size":4454,"mtime":1667232220189,"results":"76","hashOfConfig":"51"},{"size":3615,"mtime":1667232220189,"results":"77","hashOfConfig":"51"},{"size":2554,"mtime":1667233638799,"results":"78","hashOfConfig":"51"},{"size":982,"mtime":1667233638799,"results":"79","hashOfConfig":"51"},{"size":281,"mtime":1667133256914,"results":"80","hashOfConfig":"51"},{"size":1837,"mtime":1667133112984,"results":"81","hashOfConfig":"51"},{"size":2542,"mtime":1667133256914,"results":"82","hashOfConfig":"51"},{"size":404,"mtime":1667133112984,"results":"83","hashOfConfig":"51"},{"size":398,"mtime":1667133112994,"results":"84","hashOfConfig":"51"},{"size":4995,"mtime":1667228613359,"results":"85","hashOfConfig":"51"},{"size":3574,"mtime":1667231990799,"results":"86","hashOfConfig":"51"},{"size":2150,"mtime":1667133112994,"results":"87","hashOfConfig":"51"},{"size":1287,"mtime":1667133256914,"results":"88","hashOfConfig":"51"},{"size":1846,"mtime":1667232220189,"results":"89","hashOfConfig":"51"},{"size":2033,"mtime":1667133112994,"results":"90","hashOfConfig":"51"},{"size":2570,"mtime":1667232220179,"results":"91","hashOfConfig":"51"},{"size":6536,"mtime":1667232220189,"results":"92","hashOfConfig":"51"},{"size":444,"mtime":1667232220189,"results":"93","hashOfConfig":"51"},{"size":149,"mtime":1667133112984,"results":"94","hashOfConfig":"51"},{"size":1922,"mtime":1667133112984,"results":"95","hashOfConfig":"51"},{"size":584,"mtime":1667133112994,"results":"96","hashOfConfig":"51"},{"size":5670,"mtime":1667232220189,"results":"97","hashOfConfig":"51"},{"size":4523,"mtime":1667228613369,"results":"98","hashOfConfig":"51"},{"size":555,"mtime":1667232220189,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"19ots2a",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/index.js",[],["209","210"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/store.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/App.js",["211"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/contactSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/mentorSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/studentSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/assessmentSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewAssessment.js",["212","213"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { addAssessment, submitContactReqToServer } from \"../redux/apiCall\";\nimport Sidebar from \"./Sidebar\";\n\nconst NewAssessment = () => {\n  const [assessmentInputs, setAssessmentInputs] = useState({\n    title: \"\",\n    duedate: \"\",\n  });\n\n  const dispatch = useDispatch();\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n  const { message, isFetching } = useSelector((state) => state.contact);\n\n  const assessmentChange = (event) => {\n    const { name, value } = event.target;\n    setAssessmentInputs({ ...assessmentInputs, [name]: value, mentor: mentor });\n  };\n\n  const onAddAssessment = (event) => {\n    event.preventDefault();\n    let emailData = {\n      title: assessmentInputs.title,\n      duedate: assessmentInputs.duedate,\n    };\n    try {\n      addAssessment(assessmentInputs, dispatch);\n      submitContactReqToServer(dispatch, emailData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(message);\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Assessment</Title>\n          <TopForm onSubmit={onAddAssessment}>\n            <FormInput>\n              <Label htmlFor=\"assTitle\">Assessment Title</Label>\n              <Input\n                id=\"assTitle\"\n                type=\"text\"\n                name=\"title\"\n                value={assessmentInputs.title}\n                onChange={assessmentChange}\n                placeholder=\"Title\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"duedate\">Due Date</Label>\n              <Input\n                id=\"duedate\"\n                type=\"datetime-local\"\n                name=\"duedate\"\n                value={assessmentInputs.duedate}\n                onChange={assessmentChange}\n                placeholder=\"Due Date\"\n              />\n            </FormInput>\n            <Button disabled={isFetching}>Add</Button>\n          </TopForm>\n        </Top>\n        {message.message && (\n          <AssessmentMessage>\n            <Message>{message.message}</Message>\n          </AssessmentMessage>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewAssessment;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst TopForm = styled.form`\n  display: flex;\n  width: 50%;\n  padding: 1.25rem;\n  margin: 2rem auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  box-sizing: border-box;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #101f3c;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin: 1rem;\n  &:disabled {\n    cursor: not-allowed;\n    color: #007cda;\n  }\n`;\n\nconst AssessmentMessage = styled.div`\n  color: gray;\n  font-size: 1rem;\n  margin: 1.25rem;\n`;\n\nconst Message = styled.div`\n  padding: 1.25rem;\n  border: 1px solid teal;\n  color: green;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/CreateQuiz.js",["214","215"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\n\nimport Sidebar from \"./Sidebar\";\n\nconst CreateQuiz = () => {\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n  const [formData, setFormData] = useState({\n    question: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    time: null,\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let quizData = {\n      question: formData.question,\n      answers: [formData.answer1, formData.answer2, formData.answer3],\n      correct_answer: correctAnswer,\n      time_limit: formData.time,\n      assessment_id: assessmentId,\n    };\n    try {\n      const { data } = await request.post(\"/quizzes\", quizData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Quiz</Title>\n          <AssessmentContainer>\n            <AssessmentTitle>{assessment.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment.duedate}</AssessmentDuedate>\n          </AssessmentContainer>\n        </Top>\n\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            <FormInput>\n              <Label htmlFor=\"question\">Question</Label>\n              <Input\n                id=\"question\"\n                type=\"text\"\n                name=\"question\"\n                onChange={handleChange}\n                placeholder=\"Question\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer1\">Asnwer 1</Label>\n              <Input\n                id=\"answer1\"\n                type=\"text\"\n                name=\"answer1\"\n                onChange={handleChange}\n                placeholder=\"Answer One\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer2\">Answer 2</Label>\n              <Input\n                id=\"answer2\"\n                type=\"text\"\n                name=\"answer2\"\n                onChange={handleChange}\n                placeholder=\"Answer Two\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer3\">Answer 3</Label>\n              <Input\n                id=\"answer3\"\n                type=\"text\"\n                name=\"answer3\"\n                onChange={handleChange}\n                placeholder=\"Answer Three\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"correct\">Correct Answer</Label>\n              <Input\n                id=\"correct\"\n                type=\"text\"\n                name=\"correct\"\n                onChange={(e) => setCorrectAnswer(e.target.value)}\n                placeholder=\"Correct Answer\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"time\">Time Limit</Label>\n              <Input\n                id=\"time\"\n                type=\"number\"\n                name=\"time\"\n                onChange={handleChange}\n                placeholder=\"Time Limit\"\n              />\n            </FormInput>\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default CreateQuiz;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentContainer = styled.article`\n  display: flex;\n  align-items: center;\n  margin: 1.25rem 0;\n  width: 40%;\n  justify-content: space-between;\n`;\nconst AssessmentTitle = styled.article``;\nconst AssessmentDuedate = styled.article``;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #ea501a;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/New.js",["216","217"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\n\nimport Sidebar from \"./Sidebar\";\n\nconst New = ({ inputs, title }) => {\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n  const [formData, setFormData] = useState({\n    question: \"\",\n    instructions: \"\",\n    answer: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newData = {\n      question: formData.question,\n      instructions: formData.instructions,\n      answer: formData.answer,\n      assessment_id: assessmentId,\n    };\n    try {\n      const { data } = await request.post(\"/kataas\", newData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>{title}</Title>\n          <AssessmentContainer>\n            <AssessmentTitle>{assessment.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment.duedate}</AssessmentDuedate>\n          </AssessmentContainer>\n        </Top>\n\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            {inputs.map((input) => (\n              <FormInput key={input.id}>\n                <Label>{input.label}</Label>\n                <Input\n                  type={input.type}\n                  name={input.name}\n                  onChange={handleChange}\n                  placeholder={input.placeholder}\n                />\n              </FormInput>\n            ))}\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default New;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentContainer = styled.article`\n  display: flex;\n  align-items: center;\n  margin: 1.25rem 0;\n  width: 40%;\n  justify-content: space-between;\n`;\nconst AssessmentTitle = styled.article``;\nconst AssessmentDuedate = styled.article``;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #ea501a;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Home.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/List.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assessments.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Single.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/SingleAssessment.js",["218","219"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleAssessmentSidebar from \"../components/SingleAssessmentSidebar\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { shuffleAnswers } from \"../Helpers/shuffleAnswers\";\n\nconst SingleAssessment = () => {\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const [isQuizExpanded, setQuizExpanded] = useState(false);\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n\n  const expand = () => {\n    setQuizExpanded((isQuizExpanded) => !isQuizExpanded);\n  };\n\n  return (\n    <Container>\n      <SingleAssessmentSidebar />\n      <AssessmentContainer>\n        <Top>\n          <AssessmentInfo>\n            <AssessmentTitle>{assessment?.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment?.duedate}</AssessmentDuedate>\n          </AssessmentInfo>\n        </Top>\n        <Bottom>\n          <TaskContainer>\n            <Task onClick={expand}>\n              <ArrowForwardIosIcon\n                on\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Questions</Title>\n            </Task>\n            {isQuizExpanded && (\n              <QuestionContainer>\n                {assessment?.quizzes?.map((question) => {\n                  const answers = shuffleAnswers(question);\n                  return (\n                    <Question>\n                      <Prompt>{question.question}</Prompt>\n                      {answers.map((answer) => (\n                        <Answer>{answer}</Answer>\n                      ))}\n                    </Question>\n                  );\n                })}\n              </QuestionContainer>\n            )}\n          </TaskContainer>\n          <TaskContainer>\n            <Task>\n              <ArrowForwardIosIcon\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Katas</Title>\n            </Task>\n          </TaskContainer>\n          <TaskContainer>\n            <Task>\n              <ArrowForwardIosIcon\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Prose</Title>\n            </Task>\n          </TaskContainer>\n        </Bottom>\n      </AssessmentContainer>\n    </Container>\n  );\n};\n\nexport default SingleAssessment;\n\nconst Container = styled.main`\n  display: flex;\n  width: 100%;\n  position: relative;\n`;\n\nconst AssessmentContainer = styled.section`\n  width: 70vw;\n  min-height: 100vh;\n  margin: 0 auto;\n`;\n\nconst Top = styled.article``;\nconst Bottom = styled.article`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst AssessmentTitle = styled.article``;\n\nconst AssessmentInfo = styled.article`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentDuedate = styled.article``;\n\nconst TaskContainer = styled.section``;\n\nconst Task = styled.article`\n  display: flex;\n  align-items: center;\n  background-color: #f5f5f5;\n  gap: 5px;\n  cursor: pointer;\n  padding: 0.8rem;\n  margin: 1.25rem;\n`;\n\nconst Title = styled.span`\n  font-size: 1rem;\n  font-weight: bold;\n  color: #101f3c;\n`;\n\nconst QuestionContainer = styled.article``;\nconst Question = styled.article`\n  border: 0.5px solid lightgray;\n  padding: 0.8rem;\n  margin: 1.25rem;\n`;\n\nconst Prompt = styled.h3`\n  background-color: #lightgray;\n  padding: 0.8rem;\n  margin: 0.25rem;\n  color: gray;\n  cursor: pointer;\n`;\n\nconst Answer = styled.article`\n  background-color: #f5f5f5;\n  padding: 0.8rem;\n  margin: 0.25rem;\n  cursor: pointer;\n  color: gray;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Trial.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/CombineLogin.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/loginSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/attemptsSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/createFormSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/login/Login.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/TmHome.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assignment.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentDashboard.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/signup/Register.js",["220"],"import React, { useState } from \"react\";\nimport \"./signup.css\";\nimport { Link } from \"react-router-dom\";\nimport request from \"../../Helpers/requestMethods\";\n\nexport default function Register({ inputs, type }) {\n  const [input, setInput] = useState({});\n  const [confirmPassword, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInput({ ...input, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(false);\n\n    try {\n      if (input.password === confirmPassword) {\n        if (input.username) {\n          const { data } = await request.post(\"/students/register\", input);\n          data && window.location.replace(\"/students/login\");\n        }\n        if (input.work_id) {\n          const { data } = await request.post(\"/mentors/register\", input);\n          data && window.location.replace(\"/mentors/login\");\n        }\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let link;\n\n  switch (type) {\n    case \"student\":\n      link = \"/students/login\";\n      break;\n    case \"mentor\":\n      link = \"/mentors/login\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <div className=\"register-container\">\n      <div className=\"register-wrapper\">\n        <h1 className=\"header\">Create Account</h1>\n        <p>Fill in the form below</p>\n        <div className=\"registerForm\" onSubmit={handleSubmit}>\n          {inputs?.map((input) => (\n            <input\n              key={input.id}\n              type={input.type}\n              name={input.name}\n              onChange={handleChange}\n              placeholder={input.placeholder}\n              className=\"register-input\"\n            />\n          ))}\n          <input\n            type=\"password\"\n            name=\"confirm_password\"\n            onChange={(event) => setConfirmPass(event.target.value)}\n            placeholder=\"Confirm Password\"\n            className=\"register-input\"\n          />\n\n          <span>\n            {\" \"}\n            By creating an account, I consent to the processing of my personal\n            data in accordance with the <b>PRIVACY POLICY</b>\n          </span>\n          <button className=\"fluid ui button blue\">CREATE</button>\n          <span className=\"mt-2\">\n            Have an account?{\" \"}\n            <Link to={link} className=\"log\">\n              Login\n            </Link>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/registerSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/data.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/apiCall.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/requestMethods.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Footer.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AssessmentDataTable.js",["221"],"import { DataGrid } from \"@mui/x-data-grid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\nimport { deleteAssessment } from \"../redux/apiCall\";\n\nconst AssesmentDataTable = ({ data, columns, type }) => {\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => {\n    deleteAssessment(id, dispatch);\n  };\n\n  const sendInvite = async (assessment) => {\n    let inviteData = {\n      assessment_id: assessment.id,\n      mentor: mentor,\n      duedate: assessment.duedate,\n    };\n    try {\n      const { data } = await request.post(\"/invites\", inviteData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let actionColumn1;\n  let actionColumn2;\n  let actionColumn3;\n\n  switch (type) {\n    case \"mentor\":\n      actionColumn1 = [\n        {\n          field: \"createNew\",\n          headerName: \"Create New\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/mentors/assessments/${params.row.id}/new-quiz`}>\n                  <Button title=\"quiz\">Quiz</Button>\n                </Link>\n\n                <Link to={`/mentors/assessments/${params.row.id}/new-kata`}>\n                  <Button title=\"kata\">Kata</Button>\n                </Link>\n\n                <Link to={`/mentors/assessments/${params.row.id}/new-prose`}>\n                  <Button title=\"prose\">Prose</Button>\n                </Link>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      actionColumn2 = [\n        {\n          field: \"invites\",\n          headerName: \"Invite Students\",\n          width: 100,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <InviteButton onClick={() => sendInvite(params.row)}>\n                  Invite\n                </InviteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      actionColumn3 = [\n        {\n          field: \"action\",\n          headerName: \"Action\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/mentors/assessments/${params.row.id}`}>\n                  <ViewButton>View</ViewButton>\n                </Link>\n                <DeleteButton onClick={() => handleDelete(params.row.id)}>\n                  Delete\n                </DeleteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n\n      break;\n    case \"student\":\n      actionColumn2 = [\n        {\n          field: \"action\",\n          headerName: \"Action\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/students/assessments/${params.row.id}`}>\n                  <ViewButton>View</ViewButton>\n                </Link>\n                <DeleteButton onClick={() => handleDelete(params.row.id)}>\n                  Delete\n                </DeleteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <Container>\n      <TitleContainer>\n        All Assessments\n        <Link to=\"/mentors/assessments/new-assessment\">\n          <LinkText>Add New</LinkText>\n        </Link>\n      </TitleContainer>\n      <DataGrid\n        rows={data}\n        columns={columns.concat(actionColumn1, actionColumn2, actionColumn3)}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n      />\n    </Container>\n  );\n};\n\nexport default AssesmentDataTable;\n\nconst Container = styled.main`\n  height: 37.5rem;\n  padding: 1.25rem;\n`;\n\nconst ActionCell = styled.article`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst ViewButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: green;\n  background-color: rgba(0, 128, 0, 0.2);\n  cursor: pointer;\n`;\nconst Button = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: white;\n  background-color: ${(props) =>\n    props.title === \"quiz\"\n      ? \"#ea501a\"\n      : props.title === \"kata\"\n      ? \"#101f3c\"\n      : \"teal\"};\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: crimson;\n  background-color: rgba(255, 0, 0, 0.2);\n  cursor: pointer;\n`;\nconst InviteButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: crimson;\n  background-color: rgba(255, 0, 0, 0.2);\n  cursor: pointer;\n`;\n\nconst TitleContainer = styled.article`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 1.25rem;\n  color: gray;\n  margin-bottom: 1.25rem;\n`;\n\nconst LinkText = styled.span`\n  color: green;\n  font-size: 1rem;\n  font-weight: 400;\n  border: 1px solid green;\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AnswerTable.js",["222","223"],"import { DataGrid } from \"@mui/x-data-grid\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst AnswerTable = ({ data, columns, type }) => {\n  const handleDelete = (id) => {\n    // deleteAssessment(id, dispatch);\n  };\n  let actionColumn1;\n  let actionColumn2;\n\n  switch (type) {\n    case \"mentor\":\n      actionColumn1 = [\n        {\n          field: \"view\",\n          headerName: \"View\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/mentors/assessments/${params.row.id}/new-quiz`}>\n                  <Button title=\"quiz\">Quiz</Button>\n                </Link>\n\n                <Link to={`/mentors/assessments/${params.row.id}/new-kata`}>\n                  <Button title=\"kata\">Kata</Button>\n                </Link>\n\n                <Link to={`/mentors/assessments/${params.row.id}/new-prose`}>\n                  <Button title=\"prose\">Prose</Button>\n                </Link>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      actionColumn2 = [\n        {\n          field: \"action\",\n          headerName: \"Action\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <DeleteButton onClick={() => handleDelete(params.row.id)}>\n                  Delete\n                </DeleteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      break;\n    case \"student\":\n      actionColumn2 = [\n        {\n          field: \"action\",\n          headerName: \"Action\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/students/assessments/${params.row.id}`}>\n                  <ViewButton>View</ViewButton>\n                </Link>\n                <DeleteButton onClick={() => handleDelete(params.row.id)}>\n                  Delete\n                </DeleteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <Container>\n      <TitleContainer>Jon Snow's Attempts</TitleContainer>\n      <DataGrid\n        rows={data}\n        columns={columns.concat(actionColumn1, actionColumn2)}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n      />\n    </Container>\n  );\n};\n\nexport default AnswerTable;\n\nconst Container = styled.main`\n  height: 37.5rem;\n  padding: 1.25rem;\n`;\n\nconst ActionCell = styled.article`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst ViewButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: green;\n  background-color: rgba(0, 128, 0, 0.2);\n  cursor: pointer;\n`;\nconst Button = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: white;\n  background-color: ${(props) =>\n    props.title === \"quiz\"\n      ? \"#ea501a\"\n      : props.title === \"kata\"\n      ? \"#101f3c\"\n      : \"teal\"};\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: crimson;\n  background-color: rgba(255, 0, 0, 0.2);\n  cursor: pointer;\n`;\n\nconst TitleContainer = styled.article`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 1.25rem;\n  color: gray;\n  margin-bottom: 1.25rem;\n`;\n\nconst LinkText = styled.span`\n  color: green;\n  font-size: 1rem;\n  font-weight: 400;\n  border: 1px solid green;\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/DataTable.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SingleAssessmentSidebar.js",["224","225","226"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport image from \"../assests/images/logo.png\";\n\nconst SingleAssessmentSidebar = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <Top>\n          <Link to=\"/\">\n            <Logo src={image} alt=\"logo\" />\n          </Link>\n        </Top>\n        <Center></Center>\n        <Bottom></Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default SingleAssessmentSidebar;\n\nconst Container = styled.main`\n  width: 10vw;\n  background-color: #101f3c;\n  border-right: 0.5px solid rgb(230, 227, 227);\n  height: 100vh;\n  color: #fff;\n  // position: fixed;\n  padding: 3.75rem;\n`;\n\nconst Wrapper = styled.section`\n  width: 100%;\n`;\nconst Logo = styled.img`\n  width: 12.5rem;\n`;\nconst Top = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Center = styled.section``;\n\nconst List = styled.ul``;\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 10px 5px;\n  &:hover {\n    background-color: #202e49;\n  }\n`;\n\nconst ItemSpan = styled.span`\n  font-size: 13px;\n  font-weight: 600;\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.section`\n  padding: 0.625rem;\n  position: absolute;\n  bottom: 0;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Sidebar.js",["227"],"import React from \"react\";\nimport sidebar from \"../CSS/_sidebar.scss\";\nimport image from \"../assests/images/logo.png\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@radix-ui/react-avatar\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { FaBook } from \"react-icons/fa\";\nimport { MdGrade } from \"react-icons/md\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction Sidebar() {\n  const mentor = useSelector((state) => state.mentor?.currentUser?.mentor)\n  \n  return (\n    <div className=\"side-nav\">\n      <Link to=\"/\">\n        <div className=\"myLogo\">\n          <img src={image} alt=\"wewe\" />\n        </div>\n      </Link>\n\n      <div className=\"prof\">\n        <Avatar>\n          <AvatarImage\n            src=\"https://images.unsplash.com/photo-1492633423870-43d1cd2775eb?&w=128&h=128&dpr=2&q=80\"\n            alt=\"Colm Tuite\"\n            className=\"tESTING\"\n          />\n          <AvatarFallback delayMs={600}>CT</AvatarFallback>\n        </Avatar>\n        <span>{mentor.first_name}</span>\n      </div>\n      <div className=\"icon-container\">\n        <Link to=\"/mentors\">\n          <div className=\"iCon\">\n            <AiFillHome className=\"iCON\" /> <span>Home</span>\n          </div>\n        </Link>\n        <Link to=\"/mentors/assessments\">\n          <div className=\"iCon\">\n            {\" \"}\n            <FaBook className=\"iCON\" /> <span>Assesments</span>\n          </div>\n        </Link>\n\n        <Link to=\"/mentors/grades\">\n          <div className=\"iCon\">\n            {\" \"}\n            <MdGrade className=\"iCON\" /> <span>Grades</span>\n          </div>\n        </Link>\n      </div>\n      <div className=\"logof\">\n        {\" \"}\n        <BiLogOutCircle className=\"iCON\" /> <span>Logout</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Question.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Navbar.js",["228"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MoringaLogo from \"../assests/images/hackerlogo.png\";\n\nconst Navbar = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <Left>\n          <NavLink to=\"/\">\n            <Logo src={MoringaLogo} alt=\"logo\" />\n          </NavLink>\n        </Left>\n        <Right>\n          <div>\n            <span>LOGIN</span>\n            <ul>\n              <NavLink to=\"/mentors/login\">\n                <li>Login as TM</li>\n              </NavLink>\n              <NavLink to=\"/students/login\">\n                <li>Login as Student</li>\n              </NavLink>\n            </ul>\n          </div>\n          <div>\n            <span>REGISTER</span>\n            <ul>\n              <NavLink to=\"/mentors/register\">\n                <li>Register as TM</li>\n              </NavLink>\n              <NavLink to=\"/students/register\">\n                <li>Register as Student</li>\n              </NavLink>\n            </ul>\n          </div>\n        </Right>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Navbar;\n\nconst Container = styled.main`\n  height: 5rem;\n  border-bottom: 0.5px solid rgb(230, 227, 227);\n  display: flex;\n  align-items: center;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n`;\n\nconst Wrapper = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  padding: 1.25rem;\n`;\n\nconst Left = styled.article``;\n\nconst Logo = styled.img`\n  width: 10.5rem;\n`;\n\nconst Right = styled.article`\n  display: flex;\n  align-items: center;\n  gap: 1.25rem;\n  div{\n    margin-right:3em;\n    postion:relative;\n    cursor:pointer;\n    &:hover{\n      ul{\n        display:block\n      }\n    }\n    span{\n      font-size: 1.1em;\n      \n      \n    }\n\n    ul{\n      \n      display:none;\n      position:absolute;\n      min-width:100px;\n      z-index:2;\n      background-color: #f5f5f5;\n      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n      &:first-child{\n        padding-top:8px;\n      }\n      li{\n        \n        padding: 10px 16px;\n        cursor:pointer;\n        min-width:100px;\n        display:block;\n        &:hover{\n          background-color: white;\n          color:#EA501A;\n          transform: scale(1.1 1.5s ease)\n          font-weight: 700;\n        }\n      }\n    }\n  }\n`;\n\nconst Button = styled.a`\n  padding: 10px 1rem;\n  font-weight: 600;\n  color: gray;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  &:first-child {\n  }\n  &:last-child {\n    border: 1px solid lightgray;\n    border-radius: 2px;\n  }\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentSideBar.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Test.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/auth.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/dataTableSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/answer/Answer.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Info.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentAttempt.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentAssignment.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":12},{"ruleId":"233","severity":1,"message":"237","line":105,"column":7,"nodeType":"235","messageId":"236","endLine":105,"endColumn":13},{"ruleId":"233","severity":1,"message":"238","line":128,"column":7,"nodeType":"235","messageId":"236","endLine":128,"endColumn":17},{"ruleId":"239","severity":1,"message":"240","line":16,"column":37,"nodeType":"241","messageId":"242","endLine":16,"endColumn":39},{"ruleId":"233","severity":1,"message":"243","line":44,"column":15,"nodeType":"235","messageId":"236","endLine":44,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":15,"column":37,"nodeType":"241","messageId":"242","endLine":15,"endColumn":39},{"ruleId":"233","severity":1,"message":"243","line":40,"column":15,"nodeType":"235","messageId":"236","endLine":40,"endColumn":19},{"ruleId":"233","severity":1,"message":"244","line":5,"column":23,"nodeType":"235","messageId":"236","endLine":5,"endColumn":32},{"ruleId":"239","severity":1,"message":"240","line":15,"column":37,"nodeType":"241","messageId":"242","endLine":15,"endColumn":39},{"ruleId":"233","severity":1,"message":"245","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":15},{"ruleId":"233","severity":1,"message":"243","line":23,"column":15,"nodeType":"235","messageId":"236","endLine":23,"endColumn":19},{"ruleId":"233","severity":1,"message":"246","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":21},{"ruleId":"233","severity":1,"message":"247","line":147,"column":7,"nodeType":"235","messageId":"236","endLine":147,"endColumn":15},{"ruleId":"233","severity":1,"message":"248","line":48,"column":7,"nodeType":"235","messageId":"236","endLine":48,"endColumn":11},{"ruleId":"233","severity":1,"message":"249","line":50,"column":7,"nodeType":"235","messageId":"236","endLine":50,"endColumn":11},{"ruleId":"233","severity":1,"message":"250","line":60,"column":7,"nodeType":"235","messageId":"236","endLine":60,"endColumn":15},{"ruleId":"233","severity":1,"message":"251","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":15},{"ruleId":"233","severity":1,"message":"252","line":115,"column":7,"nodeType":"235","messageId":"236","endLine":115,"endColumn":13},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Bottom' is assigned a value but never used.","'BottomForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'useParams' is defined but never used.","'error' is assigned a value but never used.","'useDispatch' is defined but never used.","'LinkText' is assigned a value but never used.","'List' is assigned a value but never used.","'Item' is assigned a value but never used.","'ItemSpan' is assigned a value but never used.","'sidebar' is defined but never used.","'Button' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]