[{"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/index.js":"1","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/App.js":"2","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Home.js":"3","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Footer.js":"4","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Navbar.js":"5","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/List.js":"6","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/DataTable.js":"7","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/dataTableSource.js":"8","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Single.js":"9","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AnswerTable.js":"10","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assesments.js":"11","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Sidebar.js":"12","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assignment.js":"13","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js":"14","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentDashboard.js":"15","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentSideBar.js":"16","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Question.js":"17","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentHero.js":"18","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentAnnouncement.js":"19","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/signup/Register.js":"20","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/login/Login.js":"21","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/store.js":"22","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js":"23","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/data.js":"24","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/answer/Answer.js":"25","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js":"26","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/apiCall.js":"27","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewAssesment.js":"28","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewKata.js":"29","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewSubjective.js":"30","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Title.js":"31","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Kata.js":"32","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Congratulations.js":"33","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Quiz.js":"34","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendInvite.js":"35","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Subjective.js":"36","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/contactSlice.js":"37","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendMail.js":"38","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentLogin.js":"39","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/CombineLogin.js":"40","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/responsive.js":"41","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/CreateQuiz.js":"42","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/userSlice.js":"43","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/requestMethods.js":"44","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/auth.js":"45","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/assessmentSlice.js":"46"},{"size":281,"mtime":1666770149256,"results":"47","hashOfConfig":"48"},{"size":1997,"mtime":1666790037247,"results":"49","hashOfConfig":"48"},{"size":2941,"mtime":1666770149266,"results":"50","hashOfConfig":"48"},{"size":398,"mtime":1666770149246,"results":"51","hashOfConfig":"48"},{"size":1309,"mtime":1666770149246,"results":"52","hashOfConfig":"48"},{"size":429,"mtime":1666770149266,"results":"53","hashOfConfig":"48"},{"size":2150,"mtime":1666770149246,"results":"54","hashOfConfig":"48"},{"size":1922,"mtime":1666770149246,"results":"55","hashOfConfig":"48"},{"size":2832,"mtime":1666770149266,"results":"56","hashOfConfig":"48"},{"size":2013,"mtime":1666770149246,"results":"57","hashOfConfig":"48"},{"size":3643,"mtime":1666770149256,"results":"58","hashOfConfig":"48"},{"size":1553,"mtime":1666770149256,"results":"59","hashOfConfig":"48"},{"size":2631,"mtime":1666770149256,"results":"60","hashOfConfig":"48"},{"size":2324,"mtime":1666770149266,"results":"61","hashOfConfig":"48"},{"size":646,"mtime":1666770149266,"results":"62","hashOfConfig":"48"},{"size":3981,"mtime":1666770149256,"results":"63","hashOfConfig":"48"},{"size":2033,"mtime":1666770149256,"results":"64","hashOfConfig":"48"},{"size":1039,"mtime":1666770149256,"results":"65","hashOfConfig":"48"},{"size":1666,"mtime":1666770149256,"results":"66","hashOfConfig":"48"},{"size":2513,"mtime":1666770149266,"results":"67","hashOfConfig":"48"},{"size":1432,"mtime":1666789317907,"results":"68","hashOfConfig":"48"},{"size":387,"mtime":1666788843047,"results":"69","hashOfConfig":"48"},{"size":1705,"mtime":1666770149266,"results":"70","hashOfConfig":"48"},{"size":1837,"mtime":1666770149246,"results":"71","hashOfConfig":"48"},{"size":584,"mtime":1666770149256,"results":"72","hashOfConfig":"48"},{"size":302,"mtime":1666770149246,"results":"73","hashOfConfig":"48"},{"size":1391,"mtime":1666791648637,"results":"74","hashOfConfig":"48"},{"size":1300,"mtime":1666770149246,"results":"75","hashOfConfig":"48"},{"size":1234,"mtime":1666770149256,"results":"76","hashOfConfig":"48"},{"size":1250,"mtime":1666770149256,"results":"77","hashOfConfig":"48"},{"size":516,"mtime":1666770149256,"results":"78","hashOfConfig":"48"},{"size":1794,"mtime":1666770149246,"results":"79","hashOfConfig":"48"},{"size":883,"mtime":1666770149246,"results":"80","hashOfConfig":"48"},{"size":3544,"mtime":1666770149256,"results":"81","hashOfConfig":"48"},{"size":1349,"mtime":1666770149256,"results":"82","hashOfConfig":"48"},{"size":1806,"mtime":1666770149256,"results":"83","hashOfConfig":"48"},{"size":803,"mtime":1666770149266,"results":"84","hashOfConfig":"48"},{"size":2026,"mtime":1666770149256,"results":"85","hashOfConfig":"48"},{"size":2106,"mtime":1666770149266,"results":"86","hashOfConfig":"48"},{"size":2870,"mtime":1666770149256,"results":"87","hashOfConfig":"48"},{"size":314,"mtime":1666770149246,"results":"88","hashOfConfig":"48"},{"size":6635,"mtime":1666794479017,"results":"89","hashOfConfig":"48"},{"size":602,"mtime":1666788748587,"results":"90","hashOfConfig":"48"},{"size":404,"mtime":1666789072837,"results":"91","hashOfConfig":"48"},{"size":149,"mtime":1666789141197,"results":"92","hashOfConfig":"48"},{"size":913,"mtime":1666794416667,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"19ots2a",{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/index.js",[],["201","202"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/App.js",["203","204","205"],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Assesments from \"../pages/Assesments\";\nimport Home from \"../pages/Home\";\nimport NewAssesment from \"./NewAssesment\";\nimport NewKata from \"./NewKata\";\nimport NewSubjective from \"./NewSubjective\";\n\nimport List from \"../pages/List\";\nimport Assignment from \"../pages/Assignment\";\nimport Register from \"../pages/signup/Register\";\nimport Login from \"../pages/login/Login\";\nimport StudentLogin from \"../pages/StudentLogin\";\nimport QuizPage from \"../pages/QuizPage\";\nimport StudentDashboard from \"../pages/StudentDashboard\";\n\nimport Single from \"../pages/Single\";\nimport SendMail from \"./SendMail\";\nimport CombineLogin from \"../pages/CombineLogin\";\nimport CreateQuiz from \"./CreateQuiz\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const user = useSelector((state) => state.user.currentUser);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<Home />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"studentlogin\" element={<StudentLogin />} />\n          <Route path=\"access-account\" element={<CombineLogin />} />\n          <Route path=\"students\">\n            <Route index element={<StudentDashboard />} />\n            <Route path=\"quiz\" element={<QuizPage />} />\n            <Route path=\"assignments\" element={<Assignment />} />\n          </Route>\n        </Route>\n        <Route path=\"mentors\">\n          <Route index element={<Assesments />} />\n          <Route path=\"newquiz\" element={<CreateQuiz />} />\n          <Route path=\"newkata\" element={<NewKata />} />\n          <Route path=\"newsubjective\" element={<NewSubjective />} />\n          <Route path=\"grades\">\n            <Route index element={<List />} />\n            <Route path=\":studentId\" element={<Single />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Home.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Footer.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Navbar.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/List.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/DataTable.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/dataTableSource.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Single.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/AnswerTable.js",["206"],"import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport styled from \"styled-components\";\n\nconst rows = [\n  {\n    id: 1,\n    name: \"What is the sum of ...\",\n    answer: 2100999,\n    correctAnswer: 2100999,\n    answerThree: 59003,\n    answerFour: 290013,\n  },\n  {\n    id: 2,\n    name: \"What is the sum of ...\",\n    answer: 900,\n    correctAnswer: 9099,\n    answerThree: 5003,\n    answerFour: 2013,\n  },\n  {\n    id: 3,\n    name: \"What is the sum of ...\",\n    answer: 5,\n    correctAnswer: 5,\n    answerThree: 59,\n    answerFour: 3,\n  },\n  {\n    id: 4,\n    name: \"What is the sum of ...\",\n    answer: 9,\n    correctAnswer: 2100999,\n    answerThree: 9003,\n    answerFour: 290013,\n  },\n];\n\nconst AnswerTable = () => {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Question Id</TableCell>\n            <TableCell>Questions</TableCell>\n            <TableCell>Selected Answer</TableCell>\n            <TableCell>Correct Answer</TableCell>\n            <TableCell>Answer Three</TableCell>\n            <TableCell>Answer Four</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.answer}</TableCell>\n              <TableCell>{row.correctAnswer}</TableCell>\n              <TableCell>{row.answerThree}</TableCell>\n              <TableCell>{row.answerFour}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default AnswerTable;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assesments.js",["207"],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport assesment from \"../CSS/_assesment.scss\";\nimport { BiBookAdd } from \"react-icons/bi\";\nimport { MdModeEditOutline } from \"react-icons/md\";\nimport { MdDelete } from \"react-icons/md\";\nimport { BsCodeSlash } from \"react-icons/bs\";\nimport { BsPatchQuestion } from \"react-icons/bs\";\n\nfunction Assesments() {\n  let navigate = useNavigate();\n  return (\n    <div className=\"asses\">\n      <Sidebar />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>Assesment</h1>\n        </div>\n        <div className=\"add\">\n          <div>\n            <BiBookAdd className=\"a-icon\" />{\" \"}\n            <span\n              onClick={() => {\n                navigate(\"/mentors/newquiz\");\n              }}\n            >\n              Add New Quiz\n            </span>\n          </div>\n          <div>\n            <BsCodeSlash className=\"a-icon\" />{\" \"}\n            <span\n              onClick={() => {\n                navigate(\"/mentors/newkata\");\n              }}\n            >\n              Add New Kata\n            </span>\n          </div>\n          <div>\n            <BsPatchQuestion className=\"a-icon\" />{\" \"}\n            <span\n              onClick={() => {\n                navigate(\"/mentors/newsubjective\");\n              }}\n            >\n              Add Subjective Assessment\n            </span>\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Search Assesment\"\n              name=\"search\"\n              className=\"Search\"\n            />\n          </div>\n        </div>\n        <div className=\"as-container\">\n          <div className=\"Assesment\">\n            <span>Assesment 1</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 2</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 3</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 4</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Assesments;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Sidebar.js",["208"],"import React from \"react\";\nimport sidebar from \"../CSS/_sidebar.scss\";\nimport image from \"../assests/images/logo.png\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@radix-ui/react-avatar\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { FaBook } from \"react-icons/fa\";\nimport { MdGrade } from \"react-icons/md\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  return (\n    <div className=\"side-nav\">\n      <Link to=\"/\">\n        <div className=\"myLogo\">\n          <img src={image} alt=\"wewe\" />\n        </div>\n      </Link>\n\n      <div className=\"prof\">\n        <Avatar>\n          <AvatarImage\n            src=\"https://images.unsplash.com/photo-1492633423870-43d1cd2775eb?&w=128&h=128&dpr=2&q=80\"\n            alt=\"Colm Tuite\"\n            className=\"tESTING\"\n          />\n          <AvatarFallback delayMs={600}>CT</AvatarFallback>\n        </Avatar>\n        <span>username</span>\n      </div>\n      <div className=\"icon-container\">\n        <div className=\"iCon\">\n          {\" \"}\n          <AiFillHome className=\"iCON\" /> <span>Home</span>\n        </div>\n        <div className=\"iCon\">\n          {\" \"}\n          <FaBook className=\"iCON\" /> <span>Assesments</span>\n        </div>\n        <div className=\"iCon\">\n          {\" \"}\n          <MdGrade className=\"iCON\" /> <span>Grades</span>\n        </div>\n      </div>\n      <div className=\"logof\">\n        {\" \"}\n        <BiLogOutCircle className=\"iCON\" /> <span>Logout</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/Assignment.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentDashboard.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentSideBar.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Question.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentHero.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/StudentAnnouncement.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/signup/Register.js",["209","210"],"import React, { useState } from \"react\";\nimport \"./signup.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Register() {\n  const [inputs, setInputs] = useState({});\n  const [confirmPassword, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(false);\n\n    try {\n      if (inputs.password === confirmPassword) {\n        // const { data } = await axios.post(\"/register\", inputs);\n        inputs && window.location.replace(\"/login\");\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <h1 className=\"header\">Create Account</h1>\n        <p>Fill in the form below</p>\n        <form className=\"registerForm\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"first_name\"\n            placeholder=\"First Name\"\n          />\n\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"last_name\"\n            placeholder=\"Last Name\"\n          />\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"username\"\n            placeholder=\"Username\"\n          />\n\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"email\"\n            placeholder=\"Email\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={handleChange}\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={(event) => setConfirmPass(event.target.value)}\n            name=\"confirm password\"\n            placeholder=\"Confirm Password\"\n          />\n\n          <span>\n            {\" \"}\n            By creating an account, I consent to the processing of my personal\n            data in accordance with the <b>PRIVACY POLICY</b>\n          </span>\n          <button className=\"fluid ui button blue\">CREATE</button>\n          <span className=\"mt-2\">\n            Have an account?{\" \"}\n            <Link to=\"/login\" className=\"log\">\n              Login\n            </Link>\n          </span>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/login/Login.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/store.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/data.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/answer/Answer.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/apiCall.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewAssesment.js",["211"],"import { QuizRounded } from '@mui/icons-material';\nimport React, {useState} from 'react'\nimport Congratulations from './Congratulations';\nimport Quiz from './Quiz';\nimport SendInvite from './SendInvite';\nimport Sidebar from './Sidebar'\nimport Title from './Title';\n\nfunction NewAssesment() {\n    const [page, setPage] = useState(0);\n    const [formData, setFormData] = useState({\n        title: \"\",\n        \n      });\n    \n\n      //handlechange\n     function handleChange (event){\n        const name = event.target.name;\n        let value = event.target.value;\n        setFormData({\n            ...formData,\n            [name]:value\n        })\n    }\n    console.log(formData)\n\n    const componentList = [\n        <Title page={page} setPage={setPage} handleChange={handleChange} formData={formData}/>,\n        <Quiz page={page} setPage={setPage} />,\n        <SendInvite page={page} setPage={setPage}  />,\n        <Congratulations page={page} setPage={setPage} handleChange={handleChange} formData={formData}/>\n      ];\n\n\n  return (\n    <div className=\"asses\">\n      <Sidebar className=\".side-nav\" />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1> New Quiz</h1>\n        </div>\n         {componentList[page]}\n      </div>\n    </div>\n  );\n}\n\nexport default NewAssesment\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewKata.js",["212"],"import React, {useState} from 'react'\nimport Congratulations from './Congratulations';\nimport Kata from './Kata';\nimport Question from './Quiz';\nimport SendInvite from './SendInvite';\nimport Sidebar from './Sidebar'\nimport Title from './Title';\n\nfunction NewKata() {\n    const [page, setPage] = useState(0);\n    const [formData, setFormData] = useState({\n        title: \"\",\n      });\n    \n\n      //handlechange\n     function handleChange (event){\n        const name = event.target.name;\n        let value = event.target.value;\n        setFormData({\n            ...formData,\n            [name]:value\n        })\n    }\n\n    const componentList = [\n        <Title page={page} setPage={setPage} handleChange={handleChange} formData={formData}/>,\n        <Kata page={page} setPage={setPage} />,\n        <SendInvite page={page} setPage={setPage} />,\n        <Congratulations page={page} setPage={setPage} handleChange={handleChange} formData={formData}/>\n      ];\n\n\n  return (\n    <div className=\"asses\">\n      <Sidebar className=\".side-nav\" />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1> New Kata</h1>\n        </div>\n         {componentList[page]}\n      </div>\n    </div>\n  );\n}\n\nexport default NewKata\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/NewSubjective.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Title.js",["213"],"import React from 'react'\nimport title from '../CSS/_title.scss'\n\nfunction Title({page, setPage, handleChange,formData }) {\n  return (\n    <div className='a-title'>\n        <div className='heading'>Kindly choose assessment title</div>\n        <div>\n            <input type=\"text\" placeholder=\"Title\" value={formData.title} name=\"title\" onChange={handleChange}/>\n        </div>\n        <div>\n            <button onClick={() => {setPage(page + 1);}} >NEXT</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Title","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Kata.js",["214","215"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Kata({page, setPage}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n    };\n\n\n    console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container'>\n                        <h4>Challenge {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n        <div className='q-buttons'>\n        <button onClick={() => {setPage(page - 1)}} >Previous</button>\n        <button onClick={() => {setPage(page + 1)}}>NEXT</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Kata","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Congratulations.js",["216"],"import React from 'react'\nimport congrats from '../CSS/_congratulations.scss'\nimport confeti from '../assests/images/confeti.png'\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Congratulations() {\n    let navigate = useNavigate();\n    \n  return (\n    <div className='congrats'>\n        <div>\n            <h1>Congratulations!</h1>\n        </div>\n        <div>\n            <h5>New Assesment has been created</h5>\n        </div>\n        <div>\n            <img src={confeti} alt='Yey'/>\n            {/* <iframe src=\"https://giphy.com/embed/5jT0jaNDsM6Ik7X9yq\" width=\"200\" height=\"200\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/justin-background-confetti-5jT0jaNDsM6Ik7X9yq\"></a></p> */}\n        </div>\n        <button onClick={()=>{navigate(\"/assessments\")}}>CLOSE</button>\n    </div>\n  )\n}\n\nexport default Congratulations","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Quiz.js",["217","218"],"import React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\nfunction Quiz({page, setPage}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\", optionA: \"\", optionB: \"\",optionC: \"\",optionD: \"\", correctAns:\"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\",\n            optionA: \"\",\n            optionB: \"\",\n            optionC: \"\",\n            optionD: \"\",\n            correctAns: \"\",\n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n    };\n    //dummy will be replaced by actual student emails\n    // const options = [\n    //     {value: '', text: '--Choose an option--'},\n    //     {value: 'apple', text: 'Apple 🍏'},\n    //     {value: 'banana', text: 'Banana 🍌'},\n    //     {value: 'kiwi', text: 'Kiwi 🥝'},\n    //   ];\n\n    console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container'>\n                        <h4>Question {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                        <input type=\"text\" name=\"optionA\" placeholder=\"Enter option A\" value={field.optionA} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionB\" placeholder=\"Enter option B\" value={field.optionB} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionC\" placeholder=\"Enter option C\" value={field.optionC} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionD\" placeholder=\"Enter option D\" value={field.optionD} onChange={(event) =>handleInputChange(index, event) }/>\n                        <select className='opt' onChange={(event) =>handleInputChange(index, event) } value={field.correctAns} name='correctAns'>\n                           {/* {options.map(option => (\n                                <option key={option.value} value={option.value}>\n                                {option.text}\n                            </option>))} */}\n                            <option value=\"a\">A</option>\n                            <option value=\"b\">B</option>\n                            <option value=\"ab\">AB</option>\n                            <option value=\"o\">O</option>\n                        </select>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n        <div className='q-buttons'>\n        <button onClick={() => {setPage(page - 1)}} >Previous</button>\n        <button onClick={() => {setPage(page + 1)}}>NEXT</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Quiz","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendInvite.js",["219"],"import React, { useState } from 'react'\nimport invite from '../CSS/_sendInvite.scss'\nimport Select from 'react-select';\n\n\nfunction SendInvite({page, setPage, }) {\n  const [selectedlinks , setSelectedlinks] = useState([])\n  \n\n  // dummy student emails\n  const emails = [\n  {value: \"joedoe@email.com\",label: \"joedoe@email.com\",},\n  {value: \"marydoe@email.com\",label: \"marydoe@email.com\",},\n  {value: \"masai@email.com\",label: \"masai@email.com\",},\n  ];\n\n\n\n\n  return (\n    <div className=\"invite\">\n      <div className='heading'>Invite Students</div>\n      <div className='mid'>\n        <label>Select Email</label>\n       <Select  \n                isMulti\n                closeMenuOnSelect={false}\n                className=\"choise \"\n                placeholder=\"Select Students\"\n                options={emails}\n                isClearable={true}\n                noOptionsMessage={() => \"Student not found\"}\n                isSearchable = {true}\n                onChange={(item) => setSelectedlinks(item)}\n                \n                \n              />\n\n      </div>\n      <div className='lower'>\n          <button  onClick={() => {setPage(page - 1)}}>Back</button>\n          <button onClick={() => {\n              console.log(selectedlinks)\n              setPage(page + 1)}}>Finish</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SendInvite","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/Subjective.js",["220","221"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Subjective({page, setPage}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n    };\n\n\n    console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container'>\n                        <h4>Question  {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n        <div className='q-buttons'>\n        <button onClick={() => {setPage(page - 1)}} >Previous</button>\n        <button onClick={() => {setPage(page + 1)}}>NEXT</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Subjective","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/contactSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/SendMail.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/StudentLogin.js",["222","223","224"],"import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StudentLogin = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Welcome Back</Title>\n        <p>Enter your details below</p>\n        <Form>\n          <Input\n            placeholder=\"Username\"\n            name=\"username\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <Input\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button onClick={handleClick}>LOGIN</Button>\n          <Link>DO NOT REMEMBER PASSWORD?</Link>\n          <Link>CREATE A NEW ACCOUNT</Link>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default StudentLogin;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(rgba(16, 31, 60, 0.5), rgba(16, 31, 60, 0.5)),\n    url(\"https://blog.hackerrank.com/wp-content/uploads/HackerRank_RemoteHiringUpdates.png\")\n      center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 25%;\n  padding: 20px;\n  color: #0a1f4e;\n  background: white;\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  font-weight: 300;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  border: 1px solid #0a1f4e;\n  min-width: 40%;\n  margin: 10px 0;\n  padding: 10px;\n`;\n\nconst Button = styled.button`\n  background: #ea501a;\n  width: 40%;\n  color: white;\n  padding: 15px 20px;\n  cursor: pointer;\n  border: none;\n  margin-bottom: 10px;\n  &:disabled {\n    cursor: not-allowed;\n    color: green;\n  }\n`;\n\nconst Link = styled.a`\n  margin: 5px 0;\n  font-size: 12px;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst Error = styled.span`\n  color: red;\n`;\n","/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/CombineLogin.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/responsive.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/components/CreateQuiz.js",["225","226"],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/userSlice.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/requestMethods.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/Helpers/auth.js",[],"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/assessmentSlice.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":17,"column":8,"nodeType":"233","messageId":"234","endLine":17,"endColumn":16},{"ruleId":"231","severity":1,"message":"236","line":23,"column":9,"nodeType":"233","messageId":"234","endLine":23,"endColumn":13},{"ruleId":"231","severity":1,"message":"237","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":14},{"ruleId":"231","severity":1,"message":"238","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":17},{"ruleId":"231","severity":1,"message":"239","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":15},{"ruleId":"231","severity":1,"message":"240","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":13},{"ruleId":"231","severity":1,"message":"241","line":9,"column":10,"nodeType":"233","messageId":"234","endLine":9,"endColumn":15},{"ruleId":"231","severity":1,"message":"242","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":21},{"ruleId":"231","severity":1,"message":"243","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":16},{"ruleId":"231","severity":1,"message":"244","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":13},{"ruleId":"231","severity":1,"message":"245","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":16},{"ruleId":"231","severity":1,"message":"246","line":22,"column":11,"nodeType":"233","messageId":"234","endLine":22,"endColumn":32},{"ruleId":"231","severity":1,"message":"247","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"231","severity":1,"message":"245","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"231","severity":1,"message":"246","line":24,"column":11,"nodeType":"233","messageId":"234","endLine":24,"endColumn":32},{"ruleId":"231","severity":1,"message":"248","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"245","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":16},{"ruleId":"231","severity":1,"message":"246","line":22,"column":11,"nodeType":"233","messageId":"234","endLine":22,"endColumn":32},{"ruleId":"231","severity":1,"message":"249","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":18},{"ruleId":"231","severity":1,"message":"250","line":7,"column":10,"nodeType":"233","messageId":"234","endLine":7,"endColumn":18},{"ruleId":"231","severity":1,"message":"251","line":99,"column":7,"nodeType":"233","messageId":"234","endLine":99,"endColumn":12},{"ruleId":"231","severity":1,"message":"252","line":10,"column":10,"nodeType":"233","messageId":"234","endLine":10,"endColumn":20},{"ruleId":"231","severity":1,"message":"253","line":10,"column":22,"nodeType":"233","messageId":"234","endLine":10,"endColumn":35},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'NewAssesment' is defined but never used.","Identifier","unusedVar","'SendMail' is defined but never used.","'user' is assigned a value but never used.","'styled' is defined but never used.","'assesment' is defined but never used.","'sidebar' is defined but never used.","'axios' is defined but never used.","'error' is assigned a value but never used.","'QuizRounded' is defined but never used.","'Question' is defined but never used.","'title' is defined but never used.","'question' is defined but never used.","'handleRemoveQuestions' is assigned a value but never used.","'congrats' is defined but never used.","'invite' is defined but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'Error' is assigned a value but never used.","'assessment' is assigned a value but never used.","'setAssessment' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]